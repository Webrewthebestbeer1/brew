# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-05-20 14:06
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('comment', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('yeast', models.CharField(max_length=100)),
                ('mash_time', models.IntegerField()),
                ('sparge_time', models.IntegerField()),
                ('fermentationTemperature', models.IntegerField()),
                ('fermentationTime', models.IntegerField()),
                ('og', models.DecimalField(decimal_places=3, max_digits=4)),
                ('fg', models.DecimalField(decimal_places=3, max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name='Hop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=1, max_digits=4)),
                ('add', models.IntegerField()),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewlog.Entry')),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('description', models.CharField(max_length=200)),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewlog.Entry')),
            ],
        ),
        migrations.CreateModel(
            name='Malt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewlog.Entry')),
            ],
        ),
        migrations.CreateModel(
            name='Volume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_size', models.IntegerField()),
                ('grain_bill', models.IntegerField()),
                ('boil_time', models.IntegerField()),
                ('mash_temperature', models.IntegerField()),
                ('trub_loss', models.DecimalField(decimal_places=1, max_digits=3)),
                ('equipment_loss', models.DecimalField(decimal_places=1, max_digits=3)),
                ('mash_thickness', models.DecimalField(decimal_places=2, max_digits=3)),
                ('grain_temperature', models.IntegerField()),
                ('wort_shrinkage', models.IntegerField()),
                ('grain_absorption', models.DecimalField(decimal_places=2, max_digits=3)),
                ('percent_boiloff', models.IntegerField()),
                ('evaporation_factor', models.DecimalField(decimal_places=2, max_digits=3)),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewlog.Entry'),
        ),
    ]
